#include "hash/Hash.hpp"

#include <gtest/gtest.h>
#include <gmock/gmock.h>

#include <vector>

namespace
{
    const std::vector<uint8_t> kTestData = { 58, 59, 59, 255, 48, 31, 1, 255, 44, 28, 1, 255, 50, 32, 1, 255, 47, 31, 1, 255, 48, 31, 1, 255, 72, 46, 1, 255, 36, 24, 1, 255, 49, 49, 49, 231, 58, 58, 58, 255, 55, 55, 55, 255, 95, 61, 1, 255, 80, 51, 1, 255, 83, 53, 1, 255, 96, 73, 32, 255, 66, 42, 1, 255, 39, 25, 1, 255, 47, 30, 1, 255, 47, 30, 1, 255, 85, 55, 1, 255, 127, 82, 1, 255, 55, 55, 55, 255, 160, 112, 23, 255, 109, 71, 2, 255, 140, 95, 14, 255, 223, 204, 168, 255, 106, 77, 25, 255, 73, 47, 1, 255, 49, 32, 1, 255, 77, 49, 1, 255, 95, 62, 1, 255, 44, 44, 44, 192, 45, 44, 44, 192, 157, 137, 101, 255, 176, 131, 50, 255, 148, 117, 60, 255, 214, 149, 30, 255, 196, 163, 104, 255, 177, 123, 24, 255, 102, 86, 57, 255, 71, 46, 1, 255, 87, 56, 1, 255, 46, 46, 44, 192, 53, 50, 46, 192, 53, 51, 48, 192, 129, 88, 15, 255, 184, 128, 28, 255, 195, 133, 20, 255, 150, 104, 19, 255, 150, 103, 19, 255, 225, 191, 131, 255, 66, 42, 1, 255, 52, 34, 1, 255, 49, 47, 43, 192, 46, 46, 46, 192, 53, 53, 53, 244, 148, 122, 75, 255, 67, 44, 2, 255, 229, 220, 203, 255, 246, 239, 225, 255, 172, 158, 135, 255, 102, 70, 16, 255, 42, 28, 1, 255, 56, 36, 1, 255, 74, 55, 20, 214, 59, 59, 59, 244, 68, 68, 68, 255, 60, 60, 60, 231, 67, 47, 8, 255, 134, 91, 13, 255, 130, 89, 17, 255, 250, 242, 227, 255, 116, 106, 86, 255, 73, 50, 9, 255, 50, 32, 1, 255, 49, 32, 1, 255, 67, 67, 67, 255, 58, 59, 58, 255, 58, 57, 57, 231, 99, 68, 8, 255, 217, 150, 27, 255, 201, 138, 22, 255, 243, 235, 224, 255, 197, 135, 27, 255, 170, 165, 155, 255, 62, 40, 1, 255, 65, 65, 65, 255, 57, 57, 57, 255, 60, 61, 60, 255, 55, 56, 55, 255, 102, 91, 74, 255, 129, 89, 17, 255, 193, 134, 27, 255, 173, 119, 21, 255, 159, 130, 77, 255, 94, 70, 29, 255, 53, 53, 53, 231, 61, 62, 62, 255, 49, 50, 49, 255, 61, 61, 61, 255, 62, 62, 62, 255, 66, 66, 66, 255, 46, 46, 46, 192, 46, 46, 46, 192, 40, 40, 40, 192, 61, 61, 61, 255, 58, 58, 58, 255, 58, 58, 57, 255, 61, 61, 61, 255, 53, 53, 53, 255, 52, 52, 52, 255, 61, 61, 61, 255, 58, 58, 57, 255, 51, 51, 51, 255, 51, 51, 50, 255, 58, 57, 57, 255, 58, 59, 59, 255, 58, 58, 58, 255, 58, 59, 59, 255, 52, 52, 52, 255, 55, 55, 55, 255 };
}

namespace tests
{
    struct HashTestsState
    {
        std::vector<uint8_t> data;
        Amb::Hash::HashType expectedHash;
    };

    struct HashTest : testing::Test, testing::WithParamInterface<HashTestsState> {};

    TEST_P(HashTest, NonEmptyData)
    {
        const auto state = GetParam();
        const auto begin = static_cast<Amb::Hash::HashIt>(state.data.data());
        const auto end = begin + state.data.size() * sizeof(decltype(state.data)::value_type);
        const auto hash = Amb::Hash::hash(begin, end);

        EXPECT_THAT(hash, state.expectedHash);
    }

    INSTANTIATE_TEST_CASE_P(Hash, HashTest,
                            testing::Values(
                            HashTestsState{ kTestData, 7302774003641252317 }));
}
